<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Michelia</title>
    <link>http://michelia.github.io/</link>
    <description>Recent content on Michelia</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 07 Sep 2017 15:37:51 +0800</lastBuildDate>
    
	<atom:link href="http://michelia.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用Hugo搭建独立博客</title>
      <link>http://michelia.github.io/post/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 07 Sep 2017 15:37:51 +0800</pubDate>
      
      <guid>http://michelia.github.io/post/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2/</guid>
      <description>概述 Hugo是一款使用 Go 编写的静态网站生成工具，和Hexo相比最大的两个优势是: 1. 静态页面的生成速度极快 2. Hugo安装极其简单 安装 Hugo 直接下载</description>
    </item>
    
    <item>
      <title>MongoDB Note And Pandas</title>
      <link>http://michelia.github.io/post/data_visual/mongodb-note/</link>
      <pubDate>Fri, 23 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://michelia.github.io/post/data_visual/mongodb-note/</guid>
      <description>&lt;h1 id=&#34;概念&#34;&gt;概念&lt;/h1&gt;

&lt;p&gt;MongoDB非常强大且容易上手。
- 文档(document)是MongoDB中数据的基本单元，非常类似于关系数据库的行，但更有表现力。
- 集合(collection)可以看做是一个拥有动态模式的表。
- MongoDB的一个实例可以拥有多个相互独立的数据库，每个数据库都拥有自己的集合。&lt;/p&gt;

&lt;p&gt;因为文档和集合是动态的，所以这两个都具有很强的表现力。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>echarts note</title>
      <link>http://michelia.github.io/post/data_visual/echarts-note/</link>
      <pubDate>Fri, 23 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://michelia.github.io/post/data_visual/echarts-note/</guid>
      <description>&lt;h1 id=&#34;加载主题&#34;&gt;加载主题&lt;/h1&gt;

&lt;h2 id=&#34;内置主题&#34;&gt;内置主题&lt;/h2&gt;

&lt;p&gt;内置主题 macarons 和 infographic 直接传入名称即可
如：&lt;code&gt;myCharts = echarts.init(document.getElementById(&#39;main&#39;), &#39;macarons&#39;)&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;扩展主题&#34;&gt;扩展主题&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>django入门教程资料</title>
      <link>http://michelia.github.io/post/django/django-doc-tutorial/</link>
      <pubDate>Mon, 05 Oct 2015 11:52:50 +0000</pubDate>
      
      <guid>http://michelia.github.io/post/django/django-doc-tutorial/</guid>
      <description>&lt;p&gt;网上关于Django资料真的是太多了，如何甄别资料显得更加重要了。
学习并使用Django最有效的方法就是阅读官网文档&lt;a href=&#34;https://docs.djangoproject.com/&#34;&gt;https://docs.djangoproject.com/&lt;/a&gt;，的确是最有效的方法，没有之一。Django Doc比出版的书籍都讲的明了。
可能有的童鞋有发问了，可我的英文很差，拜托Django Doc的语法很简单的，单词也都是计算机的单词，不需要四级英语。这篇博文&lt;a href=&#34;http://www.the5fire.com/how-to-read-django-docs.html&#34;&gt;&lt;strong&gt;如何阅读Django的文档&lt;/strong&gt;&lt;/a&gt;是启蒙博文，那是博主亲身实践的经验，我们就不要再走弯路了。

&lt;!-- &lt;br&gt; --&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>django model 与 form 相关知识点</title>
      <link>http://michelia.github.io/post/django/django-model-form/</link>
      <pubDate>Sun, 20 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://michelia.github.io/post/django/django-model-form/</guid>
      <description>&lt;h1 id=&#34;form知识点总结&#34;&gt;form知识点总结&lt;/h1&gt;

&lt;h2 id=&#34;modelform显示关联字段&#34;&gt;ModelForm显示关联字段&lt;/h2&gt;

&lt;p&gt;ModelForm与Model很是不同。ModelForm终归是Form。因为Form只是表单，和数据库结合的很弱，所以就不能直接像Model一样，使用&lt;code&gt;__&lt;/code&gt;、&lt;code&gt;_set&lt;/code&gt;或&lt;code&gt;.&lt;/code&gt;取值。但Django中还是提供了显示的方法，使用&lt;code&gt;initial&lt;/code&gt;。
方法：
- 在Form中定义一个和Model不相关的Field，然后在&lt;code&gt;bound&lt;/code&gt;Form的时候，给参数&lt;code&gt;initial&lt;/code&gt;字典数据（包含不相关字段的数据），这样就可以动态的显示相应字段了。
- 对于&lt;code&gt;bound&lt;/code&gt;的Form实例，可以使用像&lt;code&gt;form.fields[&#39;email&#39;].initial = self.org_obj.user.email&lt;/code&gt;的方法，也可以动态在前端显示字段的值。
&lt;code&gt;form.helper[&#39;email&#39;].update_attributes(readonly=True)&lt;/code&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>django model 和 查询 知识点</title>
      <link>http://michelia.github.io/post/django/django-model/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://michelia.github.io/post/django/django-model/</guid>
      <description>&lt;p&gt;多表关联查询 - 计算机的世界主要就是操作数据，所以orm一定要使用好
学习使用Django，重要的一块就orm。
初次使用感觉总体还是很好用的。主要是Django的文档比较全。
只要多看看文档，一切问题还是都能解决的。
对于初学者而言，其中最难的就是多表关联查询，以及列表或group返回关联查询的结果。
差不多用了一天的时间，粗略看了Django关于model的文档，真是大而全呀。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>不翻墙使用google大神的方法</title>
      <link>http://michelia.github.io/post/computer/03-method-of-use-google-no-agent/</link>
      <pubDate>Thu, 23 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://michelia.github.io/post/computer/03-method-of-use-google-no-agent/</guid>
      <description>&lt;p&gt;要说互联网最离不开的工具，这无需置疑就是搜索引擎了，所以我们怎么能离开google大神呢。但因为众所周知的原因，大.陆无法直接使用google。比较彻底的解决方法是使用VPN，但VPN太专业又繁琐。对于只需要使用google搜索服务的网友，根本没有必要使用花钱的VPN。&lt;/p&gt;

&lt;p&gt;这里介绍的方法非常&lt;strong&gt;简单便捷&lt;/strong&gt;，就是修改hosts文件。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>简单易用的HTTPServer服务器</title>
      <link>http://michelia.github.io/post/computer/02-simple-http-server/</link>
      <pubDate>Tue, 14 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>http://michelia.github.io/post/computer/02-simple-http-server/</guid>
      <description>&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python -m SimpleHTTPServer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面的命令就是在当前目录中建立HTTPServer服务器
如果当前目录下有一个叫 &lt;code&gt;index.html&lt;/code&gt; 的文件名的文件，那么这个文件就会成为一个默认页，如果没有这个文件，那么，目录列表就会显示出来。
浏览器打开&lt;code&gt;0.0.0.0:8000&lt;/code&gt; 或 &lt;code&gt;localhost:8000&lt;/code&gt; 或 &lt;code&gt;本机ip地址:8000&lt;/code&gt;即可使用。
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linux压缩/解压命令总结</title>
      <link>http://michelia.github.io/post/computer/04.linux_tar_summary/</link>
      <pubDate>Sun, 23 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>http://michelia.github.io/post/computer/04.linux_tar_summary/</guid>
      <description>&lt;h1 id=&#34;常用压缩命令总结&#34;&gt;常用压缩命令总结&lt;/h1&gt;

&lt;h2 id=&#34;zip&#34;&gt;.zip&lt;/h2&gt;

&lt;p&gt;解压：unzip FileName.zip
压缩：zip FileName.zip DirName
文件夹  zip -r FileName.zip DirName
-q：静默模式，不打印解压信息&lt;/p&gt;

&lt;h2 id=&#34;tar&#34;&gt;.tar&lt;/h2&gt;

&lt;p&gt;解包：tar xvf FileName.tar
打包：tar cvf FileName.tar DirName
（注：tar是打包，不是压缩！）&lt;/p&gt;

&lt;h2 id=&#34;gz&#34;&gt;.gz&lt;/h2&gt;

&lt;p&gt;解压1：gunzip FileName.gz
zcat 等于 gunzip -c 将压缩文件扩展到标准输出。
解压2：gzip -d FileName.gz
压缩：gzip FileName
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://michelia.github.io/404/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://michelia.github.io/404/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>